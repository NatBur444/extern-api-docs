.. _DraftsBuilder: http://extern-api.testkontur.ru/swagger/ui/index#/DraftsBuilders
.. _`POST CreateDraftsBuilder`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilders_CreateDraftsBuilderAsync
.. _`GET GetDraftsBuilder`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilders_GetDraftsBuilderAsync
.. _`GET GetDraftsBuilderMeta`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilders_GetDraftsBuilderMetaAsync
.. _`PUT UpdateDraftsBuilderMeta`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilders_UpdateDraftsBuilderMetaAsync
.. _`POST BuildDrafts`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilders_BuildDraftsAsync
.. _`GET GetBuildResult`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilders_GetBuildResultAsync
.. _`DELETE RemoveDraftsBuilder`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilders_RemoveDraftsBuilderAsync
.. _`GET GetDraftsBuilderDocuments`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocuments_GetDraftsBuilderDocumentsAsync
.. _`POST CreateDraftsBuilderDocument`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocuments_CreateDraftsBuilderDocumentAsync
.. _`GET GetDraftsBuilderDocument`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocuments_GetDraftsBuilderDocumentAsync
.. _`GET GetDraftsBuilderDocumentMeta`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocuments_GetDraftsBuilderDocumentMetaAsync
.. _`PUT UpdateDraftsBuilderDocumentMeta`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocuments_UpdateDraftsBuilderDocumentMetaAsync
.. _`DELETE RemoveDraftsBuilderDocument`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocuments_RemoveDraftsBuilderDocumentAsync
.. _`GET GetDraftsBuilderDocumentFiles`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocumentFiles_GetDraftsBuilderDocumentFilesAsync
.. _`POST CreateDraftsBuilderDocumentFile`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocumentFiles_CreateDraftsBuilderDocumentFileAsync
.. _`GET GetDraftsBuilderDocumentFile`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocumentFiles_GetDraftsBuilderDocumentFileAsync
.. _`PUT UpdateDraftsBuilderDocumentFile`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocumentFiles_UpdateDraftsBuilderDocumentFileAsync
.. _`GET GetDraftsBuilderDocumentFileContent`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocumentFiles_GetDraftsBuilderDocumentFileContentAsync
.. _`GET GetDraftsBuilderDocumentFileSignatureContent`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocumentFiles_GetDraftsBuilderDocumentFileSignatureContentAsync
.. _`GET GetDraftsBuilderDocumentFileMeta`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocumentFiles_GetDraftsBuilderDocumentFileMetaAsync
.. _`PUT UpdateDraftsBuilderDocumentFileMeta`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocumentFiles_UpdateDraftsBuilderDocumentFileMetaAsync
.. _`DELETE RemoveDraftsBuilderDocumentFile`: http://extern-api.testkontur.ru/swagger/ui/index#!/DraftsBuilders/DraftsBuilderDocumentFiles_RemoveDraftsBuilderDocumentFileAsync
.. _тут: https://www.diadoc.ru/docs/faq/faq-127

Методы для работы с DraftsBuilder
=================================

Подробная спецификация методов показана в сваггере в разделе DraftsBuilder_.

.. contents:: Список доступных методов
   :depth: 2

.. _rst-markup-createDB:
Создание DraftsBuilder
----------------------
Метод: `POST CreateDraftsBuilder`_

Метод создает основу для наполнения описи. Для создания черновика описи и дальнейшей работы с ней нужно знать идентификаторы входящего документооборота и документа в нем, а также пункт требования. Его можно прописать на весь DraftsBuilder - глобальный, а можно на конкретный документ - выборочный. Пункт требования в документе более приоритетный, но если он не заполнен, будет взято значение глобального параметра.

Также при создании нужно указать мета информацию, как и в обычном черновике, но с добавлением типа DraftsBuilder и BuilderData. На данный момент тип только submission.

Метод возвращает идентификатор созданного DraftsBuilder.

Получение DraftsBuilder
-----------------------
Метод: `GET GetDraftsBuilder`_

При помощи данного метода можно просмотреть содержимое созданного DraftsBuilder. Метод вернет мета информацию и текущий статус DraftsBuilder (новый, в процессе выполнения, собран).

Получение мета информации DraftsBuilder
---------------------------------------
Метод: `GET GetDraftsBuilderMeta`_

Метод возвращает только мета информацию DraftsBuilder без статуса.

Редактирование мета информации DraftsBuilder
--------------------------------------------
Метод: `PUT UpdateDraftsBuilderMeta`_

.. _rst-markup-build-DB:
Сборка содержимого DraftsBuilder в черновик
-------------------------------------------
Метод: `POST BuildDrafts`_

Чтобы завершить создание черновика описи необходимо привести все переданные данные к установленному формату. 
В результате работы метод вернет:
* идентификаторы черновиков, в каждом из которых будет находиться: xml-файл описи, документы, сообщение о представительстве (если есть).
* информацию о выполнении сборки, которая содержит: идентификатор TaskId, состояние сборки, результат, сообщение об ошибке. 

Процесс сборки не быстрыйй. По полученному идентификатору задачи TaskId и идентификатору DraftsBuilderId вы можете отслеживать состояние сборки черновика. 

Проверка статуса сборки
-----------------------
Метод: `POST GetBuildResult`_

По переданным идентификаторам задачи TaskId и DraftsBuilderId метод возвращает статус сборки. Если в процессе возникли ошибки, то помимо статуса и кода ошибки вернется ее описание. 
Если задача выполнилась успешно, метод вернет список идентификаторов черновиков и список битых документов с их ошибками.
.. там в результате будет список идшников черновиков и список битых документов с их ошибками
если задача выполнилась успешно
технически тут есть 2 вида ошибки: когда битый документ и когда падает джоба
если документ битый, то он просто положится в список ошибочных и все будет работать дальше
если падает джоба, то тут ничего уже не вернется и нам нужно срочно смотреть почему так произошло и чинить
т.е. джоба никогда не должна падать

Удаление DraftsBuilder
----------------------
Метод: `DELETE RemoveDraftsBuilder`_

Метод удаляет DraftsBuilder и все его содержимое.


Методы для работы с документами DraftsBuilder
=============================================

Получение списка документов в ДБ
--------------------------------
Метод: `GET GetDraftsBuilderDocuments`_

По идентификатору DraftsBuilder метод находит список документов, и каждый будет содержать: 
* идентификатор документа, 
* идентификатор DraftsBuilder, 
* мета информацию.

.. _rst-markup-create-docDB:
Создание документа
------------------
Метод: `POST CreateDraftsBuilderDocument`_

Чтобы добавить файлы, необходимо сначала добавить для них контейнер - документ. Метод вызываем столько раз, сколько отдельных документов нужно приложить.

Получение информации о документе
--------------------------------
Метод: `GET GetDraftsBuilderDocument`_

Метод возвращает всю информацию о документе по его идентификатору.

Получение мета информации документа
-----------------------------------
Метод: `GET GetDraftsBuilderDocumentMeta`_

Метод возвращает мета информацию документа по его идентификатору. 

Редактирование мета информации документа
----------------------------------------
Метод: `PUT UpdateDraftsBuilderDocumentMeta`_

Данный метод обновляет мета информацию документа на указанную вами. 

Удаление документа в DraftBuilder
---------------------------------
Метод: `DELETE RemoveDraftsBuilderDocument`_

Удаляет документ по его идентификатору в заданном DraftBuilder.

Методы для работы с файлами
===========================

Получение списка всех файлов документа
--------------------------------------
Метод: `GET GetDraftsBuilderDocumentFiles`_

По идентификатору DraftsBuilder и документу в нем метод находит список добавленных файлов.

.. _rst-markup-create-fileDB:
Создание файла в документе
--------------------------
Метод: `POST CreateDraftsBuilderDocumentFile`_

Метод вызываем столько раз, сколько файлов необходимо отправить НП. Файлы могут быть формализованные и неформализованные, подробнее читай тут_. 

В один документ можно положить:

* один или несколько файлов одного неформализованного документа,
* формализованный файл и подпись контрагента,
* титульные страницы формализованного документа с подписями контрагента.

Получение файла по идентификатору
---------------------------------
Метод: `GET GetDraftsBuilderDocumentFile`_

Метод возвращает файл со всей его информацией.

Редактирование файла в документе
--------------------------------
Метод: `PUT UpdateDraftsBuilderDocumentFile`_

Метод обновляет файл и подпись в документе на переданные в запросе.

Получение содержимого файла
---------------------------
Метод: `GET GetDraftsBuilderDocumentFileContent`_

Метод возвращает содержимое файла в формате base64.

Получение подписи к файлу
-------------------------
Метод: `GET GetDraftsBuilderDocumentFileSignatureContent`_

Метод возвращает подпись контрагента, если она была приложена к файлу.

Получение метаинформации файла
------------------------------
Метод: `GET GetDraftsBuilderDocumentFileMeta`_

Метод возвращает мета информацию файла

Редактирование меты файла
-------------------------
Метод: `PUT UpdateDraftsBuilderDocumentFileMeta`_

Метод обновляет мета информацию файла

Удаление файла документа
------------------------
Метод: `DELETE RemoveDraftsBuilderDocumentFile`_

Метод удаляет файл в документе DraftsBilder по его идентификатору. 

