.. _`POST Drafts_Sign`: https://developer.testkontur.ru/extern/post-v1-%7BaccountId%7D-drafts-%7BdraftId%7D-cloud-sign
.. _`GET GetDraftTask`: https://developer.testkontur.ru/extern/get-v1-%7BaccountId%7D-drafts-%7BdraftId%7D-tasks-%7BapiTaskId%7D
.. _`GET GetSignature`: https://developer.testkontur.ru/extern/get-v1-%7BaccountId%7D-drafts-%7BdraftId%7D-documents-%7BdocumentId%7D-signature

Подписание документов в черновике
=================================

.. important:: Методы данного раздела позволяют работать только с DSS сертификатами электронной подписи, выпущенными Удостоверяющим центром АО "ПФ "СКБ Контур" (https://ca.kontur.ru).

Подробнее о технологии DSS читайте в разделе :ref:`Облачная подпись<rst-markup-сloud_dss>`

.. _rst-markup-сloud_draft:

**Процесс работы с API для подписания черновика**

1. Подписание черновика `POST Drafts_Sign`_

В данном методе проверяется тип сертификата пользователя. Если пользователь использует DSS сертификат, то в результате метод вернет модель ``SignInitResult`` с заполненными полями ``TaskId``, ``ConfirmType = myDSS``. Это означает, что сервис перешел в режим ожидания ответа от сервера КриптоПро DSS с результатом операции.

2. Клиент на своем телефоне в приложении myDSS вводит ПИН-код от своей электронной подписи и подтверждает, что он действительно хочет подписать документ;

3. Проверка статуса задачи подписания документа методом `GET GetDraftTask`_

    * Если состояние ``task-state = failed``, это означает, что на любом этапе подписания возникла ошибка. Описание будет в модели ``Error``.
    * Если состояние ``task-state = running``, это означает, что подпись еще не подтверждена либо еще генерируется.
    * Если состояние ``task-state = succeed``, это означает, что подписание завершено. Файл подписи был успешно сформирован и сохранен в черновике.

4. Получить подпись `GET GetSignature`_

.. note::
   Подпись будет приложена к документу в черновике только при вызове метода `GET GetDraftTask`_ с результатом ``task-state = succeed``.

