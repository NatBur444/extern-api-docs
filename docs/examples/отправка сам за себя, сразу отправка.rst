.. _`GET All`: http://extern-api.testkontur.ru/swagger/ui/index#!/Accounts/Accounts_GetAll
.. _`POST Draft`: http://extern-api.testkontur.ru/swagger/ui/index#!/Drafts/Drafts_Create
.. _`POST Document`: http://extern-api.testkontur.ru/swagger/ui/index#!/Drafts/DraftDocuments_AddDocument
.. _`POST Send`: http://extern-api.testkontur.ru/swagger/ui/index#!/Drafts/Drafts_Send

1. Отправка за свою организацию
===============================

Разберем пример, когда организация сдаёт отчетность о среднесписочной численности сама за себя - то есть одновременно является и отправителем, и налогоплательщиком. Отправка пройдет по короткой схеме: будет вызван сразу метод отправки документов, проверка и подготовка документов произойдет в фоне.

Данные необходимые для работы примера
-------------------------------------

* файл декларации о среднесписочной численности :ref:`→ <rst-markup-exmp1>`;
* api-key - :doc:`/manuals/api-key`;
* inn - ИНН тестовой учетной записи;
* kpp - КПП тестовой учетной записи;
* certificate - тестовый сертификат ЭП тестовой учетной записи;
* ifns-code - код инспекции ФНС, на тестовой площадке у нас работают 2 инспекции, которые автоматически отвечают на отправленные документы (0087 - приходят положительные ответы, 0088 - приходят отрицательные ответы).

Порядок работы
--------------

Предполагаем, что учетные данные организации уже заведены.    

1. Аутентифицируемся, получая :doc:`/auth/auth.sid`.
2. Получаем accountId своей учетной записи Контур.Экстерна в тестовой среде.
3. Создаем черновик документооборота, наполняя его минимально необходимыми данными:

   * ИНН-КПП отправителя;
   * сертификат, который используется для подписи;
   * ip-адрес рабочего места абонента (необходимо для предоставления в ФНС);
   * код инспекции ФНС, куда направляется декларация;
   * ИНН-КПП организации, за которую происходит отправка декларации (в нашем случае совпадают с ИНН-КПП отправителя).
4. Записываем в черновик декларацию и подпись (контент в base64).
5. Отправляем документы из черновика в ФНС.
 
1. Аутентификация
~~~~~~~~~~~~~~~~~

Получаем :doc:`/auth/auth.sid`. Например, используя метод аутентификации :doc:`/auth/по сертификату`.

Инициализация
"""""""""""""

**Запрос**: 

``POST /auth/v5.13/authenticate-by-cert?free=true&apiKey=AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAA HTTP/1.1``

**Тело**:

::

   -----BEGIN CERTIFICATE-----
   MIIJTzCCCP6gAwIBAgIKLUfNEQAAAAKeZjAIBgYqhQMCAgMwggFbMRgwFgYFKoUD
   ...
   ig6Wya0ui9H9fTASUKfeJoOHE6u01whF06AZ3YrAMkluO1E=
   -----END CERTIFICATE-----

   
Подтверждение
"""""""""""""

**Запрос**: 

``POST /auth/v5.13/approve-cert?thumbprint=dbfb548333da2ff5277b06e119248ec03106c14d&apiKey=AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAA HTTP/1.1``

**Тело**:

::

   {
   3082 03a7 0609 2a86 4886 f70d 0107 03a0
   8203 9830 8203 9402 0100 3182 025b 3082
   ...
   9ec7 b7a0 8470 f271 2a11 d1c8 007e be42
   b128 17d1 852b 8edf de3f 7b
   }


2. Получение accountId
~~~~~~~~~~~~~~~~~~~~~~

Метод: `GET All`_

Получаем идентификатор учетной записи, от имени которой будем работать с API. В общем случае учетная запись создается при подключении организации к Контур.Экстерну.

**Запрос**: 

.. code-block:: http

   GET /v1 HTTP/1.1
   Accept: application/json
   Authorization: auth.sid AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
   X-Kontur-Apikey: AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAA
   Host: extern-api.testkontur.ru

3. Создание черновика документооборота  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Метод: `POST Draft`_

При сдаче отчетности за себя, *sender* совпадает с *organization*. Указывать необходимо оба параметра.

**Запрос**: 

.. code-block:: http

   POST /v1/ea3a9316-d3c5-4544-a6df-4e8d9aa9f813/drafts HTTP/1.1
   Accept: application/json
   Authorization: auth.sid AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
   X-Kontur-Apikey: AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAA
   Content-Type: application/json
   Host: extern-api.testkontur.ru
   Connection: Keep-Alive
   Content-Length: 9431
   
   {
	   "sender": {
		   "inn": "3782868692",
   		"kpp": "378750338",
		   "certificate": {
			   "content": "MIIJJiMxMTEwOzCCCWKgAwI ... A1MTuX"
		   },
   		"ipaddress": "8.8.8.8"
	   },
   	"recipient": {
		   "ifns-code": "0087"
	   },
   	"payer": {
		   "inn": "3782868692",
   		"organization": {
			   "kpp": "378750338"
		   }
	   }
   }

  
4. Добавление документов  
~~~~~~~~~~~~~~~~~~~~~~~~

Метод: `POST Document`_ 

На этом этапе добавляем в черновик документооборота необходимые документы. Добавим декларацию со сведениями о среднесписочной численности. В этом же запросе добавим подпись.

**Запрос**: 

.. code-block:: http

   POST /v1/ea3a9316-d3c5-4544-a6df-4e8d9aa9f813/drafts/a3cbaa67-b52d-49a0-9105-3040654c0b13/documents HTTP/1.1
   Accept: application/json
   Authorization: auth.sid AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
   X-Kontur-Apikey: AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAA
   Content-Type: application/json
   Connection: Keep-Alive
   Host: extern-api.testkontur.ru
   Content-Length: 5876
   
   {
	   "base64-content": "PD94bWwgdmVyc2lvbj0iMS4wI ... 7fI+DQo8L9Tg6es+",
   	"signature": "MIIN8QYJKoZIhvcNAQcCoIIN4jCCD ... mUqDa705IfSQx794hbff6AebIvG3prTkVxbP+2Qr/",
	   "description": {
		   "filename": "NO_SRCHIS_0087_0087_3782868692378750338_20180411_d0cc4da7-a9a8-407a-97ac-93ceff1cdff0.xml",
   		"content-type": "application/xml"
	   }
   }

5. Отправка  
~~~~~~~~~~~

Метод: `POST Send`_

На выходе данного метода получается документооборот, примеры по работе с документооборотами будут рассмотрены в примере [→]().

**Запрос**: 

.. code-block:: http

   POST /v1/ea3a9316-d3c5-4544-a6df-4e8d9aa9f813/drafts/a3cbaa67-b52d-49a0-9105-3040654c0b13/send HTTP/1.1
   Accept: application/json
   Authorization: auth.sid AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
   X-Kontur-Apikey: AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAA
   Host: extern-api.testkontur.ru
   Connection: Keep-Alive
   Content-Length: 0

